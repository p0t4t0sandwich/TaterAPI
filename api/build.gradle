plugins {
    alias(libs.plugins.shadow)
}

tasks.named('test', Test) {
    useJUnitPlatform()
    maxHeapSize = '1G'
}

tasks.build.dependsOn(test)

dependencies {
    // Test
    testImplementation('org.junit.jupiter:junit-jupiter:5.7.1')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')

    // Configurate
    implementation('org.spongepowered:configurate-hocon:4.2.0-SNAPSHOT')
    implementation('io.leangen.geantyref:geantyref:1.3.16')

    // bStats
    implementation('org.bstats:bstats-base:3.0.2')
    implementation('org.bstats:bstats-bukkit:3.0.2')
    implementation('org.bstats:bstats-bungeecord:3.0.2')
    implementation('org.bstats:bstats-sponge:3.0.2')
    implementation('org.bstats:bstats-velocity:3.0.2')

    // MySQL
    implementation('com.zaxxer:HikariCP:4.0.3')
    implementation('com.mysql:mysql-connector-j:8.3.0')

    // Brigadier
    compileOnly('com.mojang:brigadier:1.0.18')

    // Mixin
    compileOnly('org.spongepowered:mixin:0.8.5')
    compileOnly('org.ow2.asm:asm-tree:6.2')

    // Cross API dependencies
    compileOnly('net.luckperms:api:5.4')
    compileOnly('me.lucko:spark-api:0.1-SNAPSHOT')

    // Hybrid APIs
    compileOnly('io.izzel.arclight:arclight-api:1.6.3')
    compileOnly('org.kettingpowered:kettingcore:1.2')
    compileOnly('org.magmafoundation:Magma-1.12.2:e586889b')
    compileOnly('com.mohistmc:mohistdev:1.16.5')

    // Tooling
    compileOnly(project(':tooling:entrypoint-spoof'))
}

java.disableAutoTargetJvm()

jar {
    archiveFileName = "taterapi-${version}.jar"
}

shadowJar {
    dependencies {
        include(dependency("${group_id}:${project_id}:${version}"))
        exclude('META-INF', 'META-INF/**')
        exclude('LICENSE')
        exclude('INFO_BIN', 'INFO_SRC')

        // Config
        include(dependency('org.spongepowered:configurate-core:4.2.0-SNAPSHOT'))
        include(dependency('org.spongepowered:configurate-hocon:4.2.0-SNAPSHOT'))
        include(dependency('com.typesafe:config:1.4.1'))
        include(dependency('io.leangen.geantyref:geantyref:1.3.16'))

        // bStats
        include(dependency('org.bstats:bstats-base:3.0.2'))
        include(dependency('org.bstats:bstats-bukkit:3.0.2'))
        include(dependency('org.bstats:bstats-bungeecord:3.0.2'))
        include(dependency('org.bstats:bstats-sponge:3.0.2'))
        include(dependency('org.bstats:bstats-velocity:3.0.2'))

        // MySQL
        include(dependency('com.zaxxer:HikariCP:4.0.3'))
        include(dependency('com.mysql:mysql-connector-j:8.3.0'))
    }

    minimize() {
        exclude(dependency('org.spongepowered:configurate-core:4.2.0-SNAPSHOT'))
        exclude(dependency('org.spongepowered:configurate-hocon:4.2.0-SNAPSHOT'))
        exclude(dependency('org.bstats:bstats-base:3.0.2'))
    }

    // Configurate
    relocate('org.spongepowered.configurate', 'dev.neuralnexus.taterlib.lib.configurate')
    relocate('com.typesafe.config', 'dev.neuralnexus.taterlib.lib.typesafe.config')
    relocate('io.leangen.geantyref', 'dev.neuralnexus.taterlib.lib.geantyref')

    // bStats
    relocate('org.bstats', 'dev.neuralnexus.taterlib.lib.bstats') {
        exclude 'org.bstats.sponge.*'
    }

    // MySQL
    relocate('com.zaxxer.hikari', 'dev.neuralnexus.taterlib.lib.hikari')
    relocate('com.mysql', 'dev.neuralnexus.taterlib.lib.mysql')

    archiveFileName = "taterapi-full-${version}.jar"
}

artifacts {
    archives(shadowJar)
}
